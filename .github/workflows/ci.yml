name: CI for the application FTD

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  build-test:
    name: Build and Test
    runs-on: self-hosted

    steps:
      - name: checkout code
        uses: actions/checkout@v4
      
      - name: set up dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
        
      - name: restore dependencies
        run: dotnet restore src/Microservice.sln

      - name: Check code formatting (lint)
        run: dotnet format src/Microservice.sln --verify-no-changes --severity error

      - name: build-test
        run: dotnet build src/Microservice.sln --no-restore

      - name: test with coverage
        run: |
          dotnet test src/Microservice.sln --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults
          
      - name: Upload coverage report to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          # Find coverage file (Cobertura format)
          COV_FILE=$(find . -type f -name "coverage.cobertura.xml" | head -n 1)
          aws s3 cp "$COV_FILE" s3://covdevalok/coverage-reports/coverage-$(date +%s).xml
  
  code-build:
    name: Code Build
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: AWs login
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Triggering aws code build
        run: |
          aws codebuild start-build --project-name Win_app

  terraform:
    needs: code-build
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform validate
        run: terraform validate
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform plan
        run: terraform plan
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
